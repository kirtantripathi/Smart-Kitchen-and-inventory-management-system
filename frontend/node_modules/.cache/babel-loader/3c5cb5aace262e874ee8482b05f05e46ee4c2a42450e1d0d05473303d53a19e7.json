{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kirtan tripathi\\\\OneDrive\\\\Desktop\\\\PetPooja_project\\\\frontend\\\\src\\\\pages\\\\GetForecasting.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetForecasting = () => {\n  _s();\n  const [purchaseData, setPurchaseData] = useState(null);\n  const [shelfLifeData, setShelfLifeData] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [inventory, setInventory] = useState(null);\n  const [wastage, setWastage] = useState(null);\n\n  // Handle file upload\n  const handleFileUpload = (event, setData) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const text = reader.result;\n        const parsedData = parseCSV(text);\n        setData(parsedData);\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  // Parse CSV data into a usable format (simplified for demo)\n  const parseCSV = csvText => {\n    const rows = csvText.split(\"\\n\");\n    const headers = rows[0].split(\",\");\n    const data = rows.slice(1).map(row => {\n      const values = row.split(\",\");\n      let obj = {};\n      headers.forEach((header, i) => {\n        var _values$i;\n        obj[header.trim()] = (_values$i = values[i]) === null || _values$i === void 0 ? void 0 : _values$i.trim();\n      });\n      return obj;\n    });\n    return data;\n  };\n  const handleSubmit = async () => {\n    if (!purchaseData || !shelfLifeData) {\n      alert(\"Please upload both files\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"/api/forecast\", {\n        purchase_data: purchaseData,\n        shelf_life_data: shelfLifeData\n      });\n      setForecast(response.data.forecast);\n      setInventory(response.data.inventory);\n      setWastage(response.data.wastage);\n    } catch (error) {\n      console.error(\"Error submitting data\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Get Forecasting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        onChange: e => handleFileUpload(e, setPurchaseData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Upload Purchase Data (CSV)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        onChange: e => handleFileUpload(e, setShelfLifeData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Upload Shelf Life Data (CSV)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), forecast && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"7-day Forecasted Sales\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(forecast, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), inventory && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Updated Inventory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(inventory, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), wastage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Potential Wastage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(wastage, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(GetForecasting, \"Mr5ZBEnzt5NP5IaTqn3Xosh8Sgs=\");\n_c = GetForecasting;\nexport default GetForecasting;\nvar _c;\n$RefreshReg$(_c, \"GetForecasting\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GetForecasting","_s","purchaseData","setPurchaseData","shelfLifeData","setShelfLifeData","forecast","setForecast","inventory","setInventory","wastage","setWastage","handleFileUpload","event","setData","file","target","files","reader","FileReader","onload","text","result","parsedData","parseCSV","readAsText","csvText","rows","split","headers","data","slice","map","row","values","obj","forEach","header","i","_values$i","trim","handleSubmit","alert","response","post","purchase_data","shelf_life_data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","e","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/kirtan tripathi/OneDrive/Desktop/PetPooja_project/frontend/src/pages/GetForecasting.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst GetForecasting = () => {\r\n  const [purchaseData, setPurchaseData] = useState(null);\r\n  const [shelfLifeData, setShelfLifeData] = useState(null);\r\n  const [forecast, setForecast] = useState(null);\r\n  const [inventory, setInventory] = useState(null);\r\n  const [wastage, setWastage] = useState(null);\r\n\r\n  // Handle file upload\r\n  const handleFileUpload = (event, setData) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        const text = reader.result;\r\n        const parsedData = parseCSV(text);\r\n        setData(parsedData);\r\n      };\r\n      reader.readAsText(file);\r\n    }\r\n  };\r\n\r\n  // Parse CSV data into a usable format (simplified for demo)\r\n  const parseCSV = (csvText) => {\r\n    const rows = csvText.split(\"\\n\");\r\n    const headers = rows[0].split(\",\");\r\n    const data = rows.slice(1).map((row) => {\r\n      const values = row.split(\",\");\r\n      let obj = {};\r\n      headers.forEach((header, i) => {\r\n        obj[header.trim()] = values[i]?.trim();\r\n      });\r\n      return obj;\r\n    });\r\n    return data;\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!purchaseData || !shelfLifeData) {\r\n      alert(\"Please upload both files\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"/api/forecast\", {\r\n        purchase_data: purchaseData,\r\n        shelf_life_data: shelfLifeData,\r\n      });\r\n\r\n      setForecast(response.data.forecast);\r\n      setInventory(response.data.inventory);\r\n      setWastage(response.data.wastage);\r\n    } catch (error) {\r\n      console.error(\"Error submitting data\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Get Forecasting</h2>\r\n      <div>\r\n        <input\r\n          type=\"file\"\r\n          accept=\".csv\"\r\n          onChange={(e) => handleFileUpload(e, setPurchaseData)}\r\n        />\r\n        <label>Upload Purchase Data (CSV)</label>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"file\"\r\n          accept=\".csv\"\r\n          onChange={(e) => handleFileUpload(e, setShelfLifeData)}\r\n        />\r\n        <label>Upload Shelf Life Data (CSV)</label>\r\n      </div>\r\n      <button onClick={handleSubmit}>Submit</button>\r\n\r\n      {/* Display the results */}\r\n      {forecast && (\r\n        <div>\r\n          <h3>7-day Forecasted Sales</h3>\r\n          <pre>{JSON.stringify(forecast, null, 2)}</pre>\r\n        </div>\r\n      )}\r\n      {inventory && (\r\n        <div>\r\n          <h3>Updated Inventory</h3>\r\n          <pre>{JSON.stringify(inventory, null, 2)}</pre>\r\n        </div>\r\n      )}\r\n      {wastage && (\r\n        <div>\r\n          <h3>Potential Wastage</h3>\r\n          <pre>{JSON.stringify(wastage, null, 2)}</pre>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetForecasting;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}