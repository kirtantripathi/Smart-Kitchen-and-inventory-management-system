{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import Papa from 'papaparse';\n// import {\n//   LineChart, Line, XAxis, YAxis,\n//   CartesianGrid, Tooltip, ResponsiveContainer\n// } from 'recharts';\n\n// const csvFiles = [\n//   'customer_sales_data_11_45.csv',\n//   'daily_ingredient_consumption.csv',\n//   'dish_costs.csv',\n//   'ingredient_usage.csv',\n//   'ingridient_detail.csv',\n//   'mcd_sales_2_years.csv',\n//   'purchase_table.csv',\n//   'stock_table.csv'\n// ];\n\n// const Dashboard = () => {\n//   const [data, setData] = useState({});\n//   const [profitSummary, setProfitSummary] = useState(null);\n\n//   useEffect(() => {\n//     const loadCSVs = async () => {\n//       const parsedData = {};\n\n//       for (let file of csvFiles) {\n//         const response = await fetch(`/data/${file}`); // âœ… fixed backtick issue\n//         const text = await response.text();\n//         const parsed = Papa.parse(text, { header: true, skipEmptyLines: true });\n//         parsedData[file] = parsed.data;\n//       }\n\n//       setData(parsedData);\n//       computeProfit(parsedData);\n//     };\n\n//     loadCSVs();\n//   }, []);\n\n//   const computeProfit = (parsedData) => {\n//     const sales = parsedData['customer_sales_data_11_45.csv'] || [];\n//     const purchases = parsedData['purchase_table.csv'] || [];\n//     const wastage = parsedData['stock_table.csv'] || [];\n\n//     let revenue = 0;\n//     sales.forEach(s => {\n//       revenue += parseFloat(s.total_amount || 0);\n//     });\n\n//     let ingredientCost = 0;\n//     purchases.forEach(p => {\n//       ingredientCost += parseFloat(p.total_price || 0);\n//     });\n\n//     let wastageCost = 0;\n//     wastage.forEach(w => {\n//       wastageCost += parseFloat(w.wastage_cost || 0);\n//     });\n\n//     const profit = revenue - (ingredientCost + wastageCost);\n\n//     setProfitSummary({ revenue, ingredientCost, wastageCost, profit });\n//   };\n\n//   return (\n//     <div className=\"p-6 space-y-6 bg-gray-100 min-h-screen\">\n//       <h1 className=\"text-3xl font-bold text-center text-green-700\">ðŸ“Š Loss-to-Profit Dashboard</h1>\n\n//       {profitSummary && (\n//         <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n//           {['Revenue', 'Ingredient Cost', 'Wastage Cost', 'Profit'].map((label, i) => (\n//             <div key={i} className=\"bg-white p-4 rounded-xl shadow-lg text-center\">\n//               <p className=\"text-sm text-gray-500\">{label}</p>\n//               <h2 className={`text-xl font-bold ${label === 'Profit' ? 'text-green-600' : 'text-gray-800'}`}>\n//                 â‚¹ {profitSummary[label.replace(' ', '').toLowerCase()].toFixed(2)}\n//               </h2>\n//             </div>\n//           ))}\n//         </div>\n//       )}\n\n//       {/* Revenue Trend Chart */}\n//       {data['customer_sales_data_11_45.csv'] && (\n//         <div className=\"bg-white p-4 rounded-xl shadow-xl\">\n//           <h2 className=\"text-lg font-semibold mb-2\">Revenue Over Time</h2>\n//           <ResponsiveContainer width=\"100%\" height={300}>\n//             <LineChart data={data['customer_sales_data_11_45.csv'].slice(0, 30)}>\n//               <XAxis dataKey=\"date\" />\n//               <YAxis />\n//               <Tooltip />\n//               <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\" />\n//               <Line type=\"monotone\" dataKey=\"total_amount\" stroke=\"#10b981\" />\n//             </LineChart>\n//           </ResponsiveContainer>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;","map":{"version":3,"names":[],"sources":["C:/Users/kirtan tripathi/OneDrive/Desktop/Final_kush/PetPooja_project/frontend/src/pages/Dashboard.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import Papa from 'papaparse';\r\n// import {\r\n//   LineChart, Line, XAxis, YAxis,\r\n//   CartesianGrid, Tooltip, ResponsiveContainer\r\n// } from 'recharts';\r\n\r\n// const csvFiles = [\r\n//   'customer_sales_data_11_45.csv',\r\n//   'daily_ingredient_consumption.csv',\r\n//   'dish_costs.csv',\r\n//   'ingredient_usage.csv',\r\n//   'ingridient_detail.csv',\r\n//   'mcd_sales_2_years.csv',\r\n//   'purchase_table.csv',\r\n//   'stock_table.csv'\r\n// ];\r\n\r\n// const Dashboard = () => {\r\n//   const [data, setData] = useState({});\r\n//   const [profitSummary, setProfitSummary] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const loadCSVs = async () => {\r\n//       const parsedData = {};\r\n\r\n//       for (let file of csvFiles) {\r\n//         const response = await fetch(`/data/${file}`); // âœ… fixed backtick issue\r\n//         const text = await response.text();\r\n//         const parsed = Papa.parse(text, { header: true, skipEmptyLines: true });\r\n//         parsedData[file] = parsed.data;\r\n//       }\r\n\r\n//       setData(parsedData);\r\n//       computeProfit(parsedData);\r\n//     };\r\n\r\n//     loadCSVs();\r\n//   }, []);\r\n\r\n//   const computeProfit = (parsedData) => {\r\n//     const sales = parsedData['customer_sales_data_11_45.csv'] || [];\r\n//     const purchases = parsedData['purchase_table.csv'] || [];\r\n//     const wastage = parsedData['stock_table.csv'] || [];\r\n\r\n//     let revenue = 0;\r\n//     sales.forEach(s => {\r\n//       revenue += parseFloat(s.total_amount || 0);\r\n//     });\r\n\r\n//     let ingredientCost = 0;\r\n//     purchases.forEach(p => {\r\n//       ingredientCost += parseFloat(p.total_price || 0);\r\n//     });\r\n\r\n//     let wastageCost = 0;\r\n//     wastage.forEach(w => {\r\n//       wastageCost += parseFloat(w.wastage_cost || 0);\r\n//     });\r\n\r\n//     const profit = revenue - (ingredientCost + wastageCost);\r\n\r\n//     setProfitSummary({ revenue, ingredientCost, wastageCost, profit });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-6 space-y-6 bg-gray-100 min-h-screen\">\r\n//       <h1 className=\"text-3xl font-bold text-center text-green-700\">ðŸ“Š Loss-to-Profit Dashboard</h1>\r\n\r\n//       {profitSummary && (\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n//           {['Revenue', 'Ingredient Cost', 'Wastage Cost', 'Profit'].map((label, i) => (\r\n//             <div key={i} className=\"bg-white p-4 rounded-xl shadow-lg text-center\">\r\n//               <p className=\"text-sm text-gray-500\">{label}</p>\r\n//               <h2 className={`text-xl font-bold ${label === 'Profit' ? 'text-green-600' : 'text-gray-800'}`}>\r\n//                 â‚¹ {profitSummary[label.replace(' ', '').toLowerCase()].toFixed(2)}\r\n//               </h2>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Revenue Trend Chart */}\r\n//       {data['customer_sales_data_11_45.csv'] && (\r\n//         <div className=\"bg-white p-4 rounded-xl shadow-xl\">\r\n//           <h2 className=\"text-lg font-semibold mb-2\">Revenue Over Time</h2>\r\n//           <ResponsiveContainer width=\"100%\" height={300}>\r\n//             <LineChart data={data['customer_sales_data_11_45.csv'].slice(0, 30)}>\r\n//               <XAxis dataKey=\"date\" />\r\n//               <YAxis />\r\n//               <Tooltip />\r\n//               <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\" />\r\n//               <Line type=\"monotone\" dataKey=\"total_amount\" stroke=\"#10b981\" />\r\n//             </LineChart>\r\n//           </ResponsiveContainer>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}