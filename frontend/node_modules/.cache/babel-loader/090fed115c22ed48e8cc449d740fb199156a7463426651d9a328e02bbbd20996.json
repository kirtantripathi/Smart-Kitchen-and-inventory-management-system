{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kush\\\\OneDrive\\\\Desktop\\\\Final_kush\\\\PetPooja_project\\\\frontend\\\\src\\\\VegetableDetection.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// function VegetableDetection() {\n//   const [image, setImage] = useState(null);\n//   const [preview, setPreview] = useState(null);\n//   const [resultUrl, setResultUrl] = useState(null);\n\n//   const handleImageChange = (e) => {\n//     const file = e.target.files[0];\n//     setImage(file);\n//     setPreview(URL.createObjectURL(file));\n//     setResultUrl(null);\n//   };\n\n//   const handleUpload = async () => {\n//     const formData = new FormData();\n//     formData.append(\"image\", image);\n\n//     const res = await fetch(\"http://localhost:5000/upload\", {\n//       method: \"POST\",\n//       body: formData,\n//     });\n\n//     const data = await res.json();\n//     if (data.result_url) {\n//       setResultUrl(data.result_url);\n//     }\n//   };\n\n//   return (\n//     <div style={{ padding: 20 }}>\n//       <h2>Vegetable Detection</h2>\n//       <input type=\"file\" onChange={handleImageChange} />\n//       <br /><br />\n//       {preview && (\n//         <div>\n//           <img src={preview} alt=\"Preview\" height={300} />\n//           <br /><br />\n//           <button onClick={handleUpload}>Detect Vegetables</button>\n//         </div>\n//       )}\n//       <br />\n//       {resultUrl && (\n//         <div>\n//           <h4>Result:</h4>\n//           <img src={resultUrl} alt=\"Result\" height={300} />\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default VegetableDetection;\n\nimport React, { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VegetableDetection() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [resultUrl, setResultUrl] = useState(null);\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    setImage(file);\n    setPreview(URL.createObjectURL(file));\n    setResultUrl(null);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append(\"image\", image);\n    const res = await fetch(\"http://localhost:5000/upload\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await res.json();\n    if (data.result_url) {\n      setResultUrl(data.result_url);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"fw-bold text-success\",\n        children: \"\\uD83E\\uDD55 Vegetable Detection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-secondary\",\n        children: \"Upload an image to detect vegetables using AI.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"form-control mb-3\",\n          onChange: handleImageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), preview && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: preview,\n        alt: \"Preview\",\n        className: \"img-thumbnail mb-3\",\n        style: {\n          maxHeight: \"300px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success px-4\",\n        onClick: handleUpload,\n        children: \"\\uD83D\\uDD0D Detect Vegetables\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), resultUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-primary mb-3\",\n        children: \"\\uD83C\\uDF45 Detection Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: resultUrl,\n        alt: \"Result\",\n        className: \"img-fluid rounded\",\n        style: {\n          maxHeight: \"300px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(VegetableDetection, \"hlx76S+OiFafcFM+XsSH9Uw0B6w=\");\n_c = VegetableDetection;\nexport default VegetableDetection;\nvar _c;\n$RefreshReg$(_c, \"VegetableDetection\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","VegetableDetection","_s","image","setImage","preview","setPreview","resultUrl","setResultUrl","handleImageChange","e","file","target","files","URL","createObjectURL","handleUpload","formData","FormData","append","res","fetch","method","body","data","json","result_url","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","src","alt","style","maxHeight","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Kush/OneDrive/Desktop/Final_kush/PetPooja_project/frontend/src/VegetableDetection.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// function VegetableDetection() {\r\n//   const [image, setImage] = useState(null);\r\n//   const [preview, setPreview] = useState(null);\r\n//   const [resultUrl, setResultUrl] = useState(null);\r\n\r\n//   const handleImageChange = (e) => {\r\n//     const file = e.target.files[0];\r\n//     setImage(file);\r\n//     setPreview(URL.createObjectURL(file));\r\n//     setResultUrl(null);\r\n//   };\r\n\r\n//   const handleUpload = async () => {\r\n//     const formData = new FormData();\r\n//     formData.append(\"image\", image);\r\n\r\n//     const res = await fetch(\"http://localhost:5000/upload\", {\r\n//       method: \"POST\",\r\n//       body: formData,\r\n//     });\r\n\r\n//     const data = await res.json();\r\n//     if (data.result_url) {\r\n//       setResultUrl(data.result_url);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ padding: 20 }}>\r\n//       <h2>Vegetable Detection</h2>\r\n//       <input type=\"file\" onChange={handleImageChange} />\r\n//       <br /><br />\r\n//       {preview && (\r\n//         <div>\r\n//           <img src={preview} alt=\"Preview\" height={300} />\r\n//           <br /><br />\r\n//           <button onClick={handleUpload}>Detect Vegetables</button>\r\n//         </div>\r\n//       )}\r\n//       <br />\r\n//       {resultUrl && (\r\n//         <div>\r\n//           <h4>Result:</h4>\r\n//           <img src={resultUrl} alt=\"Result\" height={300} />\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default VegetableDetection;\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction VegetableDetection() {\r\n  const [image, setImage] = useState(null);\r\n  const [preview, setPreview] = useState(null);\r\n  const [resultUrl, setResultUrl] = useState(null);\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setImage(file);\r\n    setPreview(URL.createObjectURL(file));\r\n    setResultUrl(null);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", image);\r\n\r\n    const res = await fetch(\"http://localhost:5000/upload\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n\r\n    const data = await res.json();\r\n    if (data.result_url) {\r\n      setResultUrl(data.result_url);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container py-5\">\r\n      <div className=\"text-center mb-4\">\r\n        <h2 className=\"fw-bold text-success\">🥕 Vegetable Detection</h2>\r\n        <p className=\"text-secondary\">Upload an image to detect vegetables using AI.</p>\r\n      </div>\r\n\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-6\">\r\n          <input type=\"file\" className=\"form-control mb-3\" onChange={handleImageChange} />\r\n        </div>\r\n      </div>\r\n\r\n      {preview && (\r\n        <div className=\"text-center\">\r\n          <img\r\n            src={preview}\r\n            alt=\"Preview\"\r\n            className=\"img-thumbnail mb-3\"\r\n            style={{ maxHeight: \"300px\" }}\r\n          />\r\n          <br />\r\n          <button className=\"btn btn-success px-4\" onClick={handleUpload}>\r\n            🔍 Detect Vegetables\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {resultUrl && (\r\n        <div className=\"text-center mt-5\">\r\n          <h4 className=\"text-primary mb-3\">🍅 Detection Result</h4>\r\n          <img\r\n            src={resultUrl}\r\n            alt=\"Result\"\r\n            className=\"img-fluid rounded\"\r\n            style={{ maxHeight: \"300px\" }}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VegetableDetection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}