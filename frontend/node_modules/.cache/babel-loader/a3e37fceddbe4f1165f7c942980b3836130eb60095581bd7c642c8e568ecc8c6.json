{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hmodi\\\\OneDrive\\\\Desktop\\\\PetPooja_project\\\\frontend\\\\src\\\\components\\\\ChefChatBot\\\\ChefChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './ChefChat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChefChat = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [sessionId, setSessionId] = useState(null);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: 'user',\n      message: input\n    };\n    setChatHistory(prev => [...prev, userMessage]);\n    try {\n      const res = await axios.post('http://localhost:5000/chat', {\n        message: input,\n        session_id: sessionId\n      });\n      const botMessage = {\n        sender: 'chef',\n        message: res.data.response\n      };\n      setChatHistory(prev => [...prev, botMessage]);\n      setSessionId(res.data.session_id);\n      setInput('');\n    } catch (err) {\n      console.error('Error communicating with chatbot:', err);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') sendMessage();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDC68\\u200D\\uD83C\\uDF73 Chef Bot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: chatHistory.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.sender}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender === 'user' ? 'You' : 'Chef', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), \" \", msg.message]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: handleKeyDown,\n        placeholder: \"Ask a cooking question...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ChefChat, \"hKdIHLFqQ5vz8HpF0Xwd0YqR4/w=\");\n_c = ChefChat;\nexport default ChefChat;\nvar _c;\n$RefreshReg$(_c, \"ChefChat\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChefChat","_s","input","setInput","chatHistory","setChatHistory","sessionId","setSessionId","sendMessage","trim","userMessage","sender","message","prev","res","post","session_id","botMessage","data","response","err","console","error","handleKeyDown","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","idx","value","onChange","target","onKeyDown","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hmodi/OneDrive/Desktop/PetPooja_project/frontend/src/components/ChefChatBot/ChefChat.js"],"sourcesContent":["import React, { useState} from 'react';\r\nimport axios from 'axios';\r\nimport './ChefChat.css';\r\n\r\nconst ChefChat = () => {\r\n  const [input, setInput] = useState('');\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const [sessionId, setSessionId] = useState(null);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { sender: 'user', message: input };\r\n    setChatHistory(prev => [...prev, userMessage]);\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/chat', {\r\n        message: input,\r\n        session_id: sessionId\r\n      });\r\n\r\n      const botMessage = { sender: 'chef', message: res.data.response };\r\n      setChatHistory(prev => [...prev, botMessage]);\r\n      setSessionId(res.data.session_id);\r\n      setInput('');\r\n    } catch (err) {\r\n      console.error('Error communicating with chatbot:', err);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.key === 'Enter') sendMessage();\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <h2>üë®‚Äçüç≥ Chef Bot</h2>\r\n      <div className=\"chat-box\">\r\n        {chatHistory.map((msg, idx) => (\r\n          <div key={idx} className={`chat-message ${msg.sender}`}>\r\n            <strong>{msg.sender === 'user' ? 'You' : 'Chef'}:</strong> {msg.message}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"input-box\">\r\n        <input\r\n          value={input}\r\n          onChange={e => setInput(e.target.value)}\r\n          onKeyDown={handleKeyDown}\r\n          placeholder=\"Ask a cooking question...\"\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChefChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}