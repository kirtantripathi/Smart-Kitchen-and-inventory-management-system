{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kirtan tripathi\\\\OneDrive\\\\Desktop\\\\Final_kush\\\\PetPooja_project\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n// import Papa from 'papaparse';\nimport { LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst csvFiles = ['customer_sales_data_11_45.csv', 'daily_ingredient_consumption.csv', 'dish_costs.csv', 'ingredient_usage.csv', 'ingridient_detail.csv', 'mcd_sales_2_years.csv', 'purchase_table.csv', 'stock_table.csv'];\nconst Dashboard = () => {\n  _s();\n  const [data, setData] = useState({});\n  const [profitSummary, setProfitSummary] = useState(null);\n  useEffect(() => {\n    const loadCSVs = async () => {\n      const parsedData = {};\n      for (let file of csvFiles) {\n        const response = await fetch(`/data/${file}`); // âœ… fixed backtick issue\n        const text = await response.text();\n        const parsed = Papa.parse(text, {\n          header: true,\n          skipEmptyLines: true\n        });\n        parsedData[file] = parsed.data;\n      }\n      setData(parsedData);\n      computeProfit(parsedData);\n    };\n    loadCSVs();\n  }, []);\n  const computeProfit = parsedData => {\n    const sales = parsedData['customer_sales_data_11_45.csv'] || [];\n    const purchases = parsedData['purchase_table.csv'] || [];\n    const wastage = parsedData['stock_table.csv'] || [];\n    let revenue = 0;\n    sales.forEach(s => {\n      revenue += parseFloat(s.total_amount || 0);\n    });\n    let ingredientCost = 0;\n    purchases.forEach(p => {\n      ingredientCost += parseFloat(p.total_price || 0);\n    });\n    let wastageCost = 0;\n    wastage.forEach(w => {\n      wastageCost += parseFloat(w.wastage_cost || 0);\n    });\n    const profit = revenue - (ingredientCost + wastageCost);\n    setProfitSummary({\n      revenue,\n      ingredientCost,\n      wastageCost,\n      profit\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 space-y-6 bg-gray-100 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-center text-green-700\",\n      children: \"\\uD83D\\uDCCA Loss-to-Profit Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), profitSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-4 gap-4\",\n      children: ['Revenue', 'Ingredient Cost', 'Wastage Cost', 'Profit'].map((label, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-xl shadow-lg text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500\",\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: `text-xl font-bold ${label === 'Profit' ? 'text-green-600' : 'text-gray-800'}`,\n          children: [\"\\u20B9 \", profitSummary[label.replace(' ', '').toLowerCase()].toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), data['customer_sales_data_11_45.csv'] && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-xl shadow-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold mb-2\",\n        children: \"Revenue Over Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: data['customer_sales_data_11_45.csv'].slice(0, 30),\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#eee\",\n            strokeDasharray: \"5 5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"total_amount\",\n            stroke: \"#10b981\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"RUVZhSonm3pITdK5VfYBaYDGJmc=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","csvFiles","Dashboard","_s","data","setData","profitSummary","setProfitSummary","loadCSVs","parsedData","file","response","fetch","text","parsed","Papa","parse","header","skipEmptyLines","computeProfit","sales","purchases","wastage","revenue","forEach","s","parseFloat","total_amount","ingredientCost","p","total_price","wastageCost","w","wastage_cost","profit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","label","i","replace","toLowerCase","toFixed","width","height","slice","dataKey","stroke","strokeDasharray","type","_c","$RefreshReg$"],"sources":["C:/Users/kirtan tripathi/OneDrive/Desktop/Final_kush/PetPooja_project/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n// import Papa from 'papaparse';\r\nimport {\r\n  LineChart, Line, BarChart, Bar, XAxis, YAxis,\r\n  CartesianGrid, Tooltip, Legend, ResponsiveContainer\r\n} from 'recharts';\r\n\r\nconst csvFiles = [\r\n  'customer_sales_data_11_45.csv',\r\n  'daily_ingredient_consumption.csv',\r\n  'dish_costs.csv',\r\n  'ingredient_usage.csv',\r\n  'ingridient_detail.csv',\r\n  'mcd_sales_2_years.csv',\r\n  'purchase_table.csv',\r\n  'stock_table.csv'\r\n];\r\n\r\nconst Dashboard = () => {\r\n  const [data, setData] = useState({});\r\n  const [profitSummary, setProfitSummary] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const loadCSVs = async () => {\r\n      const parsedData = {};\r\n\r\n      for (let file of csvFiles) {\r\n        const response = await fetch(`/data/${file}`); // âœ… fixed backtick issue\r\n        const text = await response.text();\r\n        const parsed = Papa.parse(text, { header: true, skipEmptyLines: true });\r\n        parsedData[file] = parsed.data;\r\n      }\r\n\r\n      setData(parsedData);\r\n      computeProfit(parsedData);\r\n    };\r\n\r\n    loadCSVs();\r\n  }, []);\r\n\r\n  const computeProfit = (parsedData) => {\r\n    const sales = parsedData['customer_sales_data_11_45.csv'] || [];\r\n    const purchases = parsedData['purchase_table.csv'] || [];\r\n    const wastage = parsedData['stock_table.csv'] || [];\r\n\r\n    let revenue = 0;\r\n    sales.forEach(s => {\r\n      revenue += parseFloat(s.total_amount || 0);\r\n    });\r\n\r\n    let ingredientCost = 0;\r\n    purchases.forEach(p => {\r\n      ingredientCost += parseFloat(p.total_price || 0);\r\n    });\r\n\r\n    let wastageCost = 0;\r\n    wastage.forEach(w => {\r\n      wastageCost += parseFloat(w.wastage_cost || 0);\r\n    });\r\n\r\n    const profit = revenue - (ingredientCost + wastageCost);\r\n\r\n    setProfitSummary({ revenue, ingredientCost, wastageCost, profit });\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 space-y-6 bg-gray-100 min-h-screen\">\r\n      <h1 className=\"text-3xl font-bold text-center text-green-700\">ðŸ“Š Loss-to-Profit Dashboard</h1>\r\n\r\n      {profitSummary && (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n          {['Revenue', 'Ingredient Cost', 'Wastage Cost', 'Profit'].map((label, i) => (\r\n            <div key={i} className=\"bg-white p-4 rounded-xl shadow-lg text-center\">\r\n              <p className=\"text-sm text-gray-500\">{label}</p>\r\n              <h2 className={`text-xl font-bold ${label === 'Profit' ? 'text-green-600' : 'text-gray-800'}`}>\r\n                â‚¹ {profitSummary[label.replace(' ', '').toLowerCase()].toFixed(2)}\r\n              </h2>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Revenue Trend Chart */}\r\n      {data['customer_sales_data_11_45.csv'] && (\r\n        <div className=\"bg-white p-4 rounded-xl shadow-xl\">\r\n          <h2 className=\"text-lg font-semibold mb-2\">Revenue Over Time</h2>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <LineChart data={data['customer_sales_data_11_45.csv'].slice(0, 30)}>\r\n              <XAxis dataKey=\"date\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\" />\r\n              <Line type=\"monotone\" dataKey=\"total_amount\" stroke=\"#10b981\" />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}