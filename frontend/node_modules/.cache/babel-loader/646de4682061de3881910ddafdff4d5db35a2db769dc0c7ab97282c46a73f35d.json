{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hmodi\\\\OneDrive\\\\Desktop\\\\PetPooja_project\\\\frontend\\\\src\\\\pages\\\\GetForecasting.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GetForecasting() {\n  _s();\n  const [salesData, setSalesData] = useState('');\n  const [purchasesData, setPurchasesData] = useState('');\n  const [forecastedSales, setForecastedSales] = useState(null);\n  const [updatedInventory, setUpdatedInventory] = useState(null);\n  const [wastage, setWastage] = useState(null);\n  const parseInputData = input => {\n    let data = input.split(',');\n    let parsedData = {};\n    data.forEach(item => {\n      let [key, value] = item.split(':');\n      parsedData[key.trim()] = parseFloat(value.trim());\n    });\n    return parsedData;\n  };\n  const submitData = async () => {\n    try {\n      // Parse the input data into objects\n      const parsedSalesData = parseInputData(salesData);\n      const parsedPurchasesData = parseInputData(purchasesData);\n\n      // Prepare the payload\n      const payload = {\n        daily_sales: parsedSalesData,\n        purchases: parsedPurchasesData\n      };\n\n      // Make the POST request to the backend\n      const response = await axios.post('http://127.0.0.1:5000/api/forecast', payload);\n\n      // Set the response data into state\n      setForecastedSales(response.data.forecasted_sales);\n      setUpdatedInventory(response.data.updated_inventory);\n      setWastage(response.data.wastage);\n    } catch (error) {\n      console.error('There was an error!', error);\n      alert('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forecasting and Inventory Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sales-data\",\n        children: \"Enter Today's Sales (item: quantity), separated by commas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"sales-data\",\n        placeholder: \"McAloo_Tikki: 50, McVeggie: 30\",\n        value: salesData,\n        onChange: e => setSalesData(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"purchases-data\",\n        children: \"Enter Purchases (ingredient: quantity shelf_life_days), separated by commas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"purchases-data\",\n        placeholder: \"Potato: 200 100, Bun: 300 80\",\n        value: purchasesData,\n        onChange: e => setPurchasesData(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitData,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), forecastedSales && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Forecasted Sales:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), JSON.stringify(forecastedSales, null, 2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Updated Inventory:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), JSON.stringify(updatedInventory, null, 2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Wastage:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), JSON.stringify(wastage, null, 2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n// Styling for the container\n_s(GetForecasting, \"a2QBUJnVcpeFWU5g+CR9j/iqy+0=\");\n_c = GetForecasting;\nconst containerStyle = {\n  padding: \"20px\",\n  textAlign: \"center\"\n};\nexport default GetForecasting;\nvar _c;\n$RefreshReg$(_c, \"GetForecasting\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GetForecasting","_s","salesData","setSalesData","purchasesData","setPurchasesData","forecastedSales","setForecastedSales","updatedInventory","setUpdatedInventory","wastage","setWastage","parseInputData","input","data","split","parsedData","forEach","item","key","value","trim","parseFloat","submitData","parsedSalesData","parsedPurchasesData","payload","daily_sales","purchases","response","post","forecasted_sales","updated_inventory","error","console","alert","style","containerStyle","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","id","placeholder","onChange","e","target","onClick","JSON","stringify","_c","padding","textAlign","$RefreshReg$"],"sources":["C:/Users/hmodi/OneDrive/Desktop/PetPooja_project/frontend/src/pages/GetForecasting.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction GetForecasting() {\r\n  const [salesData, setSalesData] = useState('');\r\n  const [purchasesData, setPurchasesData] = useState('');\r\n  const [forecastedSales, setForecastedSales] = useState(null);\r\n  const [updatedInventory, setUpdatedInventory] = useState(null);\r\n  const [wastage, setWastage] = useState(null);\r\n\r\n  const parseInputData = (input) => {\r\n    let data = input.split(',');\r\n    let parsedData = {};\r\n    data.forEach((item) => {\r\n      let [key, value] = item.split(':');\r\n      parsedData[key.trim()] = parseFloat(value.trim());\r\n    });\r\n    return parsedData;\r\n  };\r\n\r\n  const submitData = async () => {\r\n    try {\r\n      // Parse the input data into objects\r\n      const parsedSalesData = parseInputData(salesData);\r\n      const parsedPurchasesData = parseInputData(purchasesData);\r\n\r\n      // Prepare the payload\r\n      const payload = {\r\n        daily_sales: parsedSalesData,\r\n        purchases: parsedPurchasesData,\r\n      };\r\n\r\n      // Make the POST request to the backend\r\n      const response = await axios.post('http://127.0.0.1:5000/api/forecast', payload);\r\n\r\n      // Set the response data into state\r\n      setForecastedSales(response.data.forecasted_sales);\r\n      setUpdatedInventory(response.data.updated_inventory);\r\n      setWastage(response.data.wastage);\r\n    } catch (error) {\r\n      console.error('There was an error!', error);\r\n      alert('An error occurred. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <h2>Forecasting and Inventory Management</h2>\r\n\r\n      <div className=\"input-section\">\r\n        <label htmlFor=\"sales-data\">Enter Today's Sales (item: quantity), separated by commas:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"sales-data\"\r\n          placeholder=\"McAloo_Tikki: 50, McVeggie: 30\"\r\n          value={salesData}\r\n          onChange={(e) => setSalesData(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"input-section\">\r\n        <label htmlFor=\"purchases-data\">Enter Purchases (ingredient: quantity shelf_life_days), separated by commas:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"purchases-data\"\r\n          placeholder=\"Potato: 200 100, Bun: 300 80\"\r\n          value={purchasesData}\r\n          onChange={(e) => setPurchasesData(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <button onClick={submitData}>Submit</button>\r\n\r\n      {forecastedSales && (\r\n        <div className=\"output-section\">\r\n          <h3>Results</h3>\r\n          <pre>\r\n            <strong>Forecasted Sales:</strong>\r\n            {JSON.stringify(forecastedSales, null, 2)}\r\n          </pre>\r\n          <pre>\r\n            <strong>Updated Inventory:</strong>\r\n            {JSON.stringify(updatedInventory, null, 2)}\r\n          </pre>\r\n          <pre>\r\n            <strong>Wastage:</strong>\r\n            {JSON.stringify(wastage, null, 2)}\r\n          </pre>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Styling for the container\r\nconst containerStyle = {\r\n  padding: \"20px\",\r\n  textAlign: \"center\",\r\n};\r\n\r\nexport default GetForecasting;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMgB,cAAc,GAAIC,KAAK,IAAK;IAChC,IAAIC,IAAI,GAAGD,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC;IAC3B,IAAIC,UAAU,GAAG,CAAC,CAAC;IACnBF,IAAI,CAACG,OAAO,CAAEC,IAAI,IAAK;MACrB,IAAI,CAACC,GAAG,EAAEC,KAAK,CAAC,GAAGF,IAAI,CAACH,KAAK,CAAC,GAAG,CAAC;MAClCC,UAAU,CAACG,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC,GAAGC,UAAU,CAACF,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;IACnD,CAAC,CAAC;IACF,OAAOL,UAAU;EACnB,CAAC;EAED,MAAMO,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF;MACA,MAAMC,eAAe,GAAGZ,cAAc,CAACV,SAAS,CAAC;MACjD,MAAMuB,mBAAmB,GAAGb,cAAc,CAACR,aAAa,CAAC;;MAEzD;MACA,MAAMsB,OAAO,GAAG;QACdC,WAAW,EAAEH,eAAe;QAC5BI,SAAS,EAAEH;MACb,CAAC;;MAED;MACA,MAAMI,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,IAAI,CAAC,oCAAoC,EAAEJ,OAAO,CAAC;;MAEhF;MACAnB,kBAAkB,CAACsB,QAAQ,CAACf,IAAI,CAACiB,gBAAgB,CAAC;MAClDtB,mBAAmB,CAACoB,QAAQ,CAACf,IAAI,CAACkB,iBAAiB,CAAC;MACpDrB,UAAU,CAACkB,QAAQ,CAACf,IAAI,CAACJ,OAAO,CAAC;IACnC,CAAC,CAAC,OAAOuB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CE,KAAK,CAAC,sCAAsC,CAAC;IAC/C;EACF,CAAC;EAED,oBACEpC,OAAA;IAAKqC,KAAK,EAAEC,cAAe;IAAAC,QAAA,gBACzBvC,OAAA;MAAAuC,QAAA,EAAI;IAAoC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE7C3C,OAAA;MAAK4C,SAAS,EAAC,eAAe;MAAAL,QAAA,gBAC5BvC,OAAA;QAAO6C,OAAO,EAAC,YAAY;QAAAN,QAAA,EAAC;MAA0D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9F3C,OAAA;QACE8C,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,YAAY;QACfC,WAAW,EAAC,gCAAgC;QAC5C3B,KAAK,EAAElB,SAAU;QACjB8C,QAAQ,EAAGC,CAAC,IAAK9C,YAAY,CAAC8C,CAAC,CAACC,MAAM,CAAC9B,KAAK;MAAE;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN3C,OAAA;MAAK4C,SAAS,EAAC,eAAe;MAAAL,QAAA,gBAC5BvC,OAAA;QAAO6C,OAAO,EAAC,gBAAgB;QAAAN,QAAA,EAAC;MAA4E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpH3C,OAAA;QACE8C,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,gBAAgB;QACnBC,WAAW,EAAC,8BAA8B;QAC1C3B,KAAK,EAAEhB,aAAc;QACrB4C,QAAQ,EAAGC,CAAC,IAAK5C,gBAAgB,CAAC4C,CAAC,CAACC,MAAM,CAAC9B,KAAK;MAAE;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN3C,OAAA;MAAQoD,OAAO,EAAE5B,UAAW;MAAAe,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAE3CpC,eAAe,iBACdP,OAAA;MAAK4C,SAAS,EAAC,gBAAgB;MAAAL,QAAA,gBAC7BvC,OAAA;QAAAuC,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChB3C,OAAA;QAAAuC,QAAA,gBACEvC,OAAA;UAAAuC,QAAA,EAAQ;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACjCU,IAAI,CAACC,SAAS,CAAC/C,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC;MAAA;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACN3C,OAAA;QAAAuC,QAAA,gBACEvC,OAAA;UAAAuC,QAAA,EAAQ;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAClCU,IAAI,CAACC,SAAS,CAAC7C,gBAAgB,EAAE,IAAI,EAAE,CAAC,CAAC;MAAA;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eACN3C,OAAA;QAAAuC,QAAA,gBACEvC,OAAA;UAAAuC,QAAA,EAAQ;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACxBU,IAAI,CAACC,SAAS,CAAC3C,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;MAAA;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;;AAEA;AAAAzC,EAAA,CA3FSD,cAAc;AAAAsD,EAAA,GAAdtD,cAAc;AA4FvB,MAAMqC,cAAc,GAAG;EACrBkB,OAAO,EAAE,MAAM;EACfC,SAAS,EAAE;AACb,CAAC;AAED,eAAexD,cAAc;AAAC,IAAAsD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}